"use client"

import { useState } from "react"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Phone, MapPin, Clock, AlertTriangle, Shield, Users, Zap, Copy } from "lucide-react"
import { useToast } from "@/components/toast"

interface EmergencyProps {
  user: any
}

const emergencyContacts = [
  {
    id: "corruption",
    title: "–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—é –∫–æ—Ä—Ä—É–ø—Ü–∏–∏",
    number: "1424",
    description: "–°–æ–æ–±—â–∏—Ç—å –æ –∫–æ—Ä—Ä—É–ø—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö",
    color: "from-red-500 to-red-600",
    icon: Shield,
    available: "24/7",
  },
  {
    id: "prosecutor",
    title: "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞ –†–ö",
    number: "123",
    description: "–ü—Ä–∞–≤–æ–≤–∞—è –ø–æ–º–æ—â—å –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
    color: "from-blue-500 to-blue-600",
    icon: Users,
    available: "–†–∞–±–æ—á–∏–µ —á–∞—Å—ã",
  },
  {
    id: "knb",
    title: "–ö–æ–º–∏—Ç–µ—Ç –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    number: "1415",
    description: "–°–µ—Ä—å—ë–∑–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    color: "from-purple-500 to-purple-600",
    icon: AlertTriangle,
    available: "24/7",
  },
  {
    id: "police",
    title: "–ü–æ–ª–∏—Ü–∏—è (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞)",
    number: "102",
    description: "–£–≥—Ä–æ–∑–∞ –∂–∏–∑–Ω–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    color: "from-orange-500 to-orange-600",
    icon: Zap,
    available: "24/7",
  },
]

const quickActions = [
  {
    id: "witness_protection",
    title: "–ó–∞—â–∏—Ç–∞ —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π",
    description: "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∑–∞—â–∏—Ç—É –ø—Ä–∏ —É–≥—Ä–æ–∑–∞—Ö",
    icon: Shield,
    color: "bg-green-500",
  },
  {
    id: "legal_aid",
    title: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å",
    description: "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–∞–≤–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
    icon: Users,
    color: "bg-blue-500",
  },
  {
    id: "anonymous_tip",
    title: "–ê–Ω–æ–Ω–∏–º–Ω—ã–π —Å–∏–≥–Ω–∞–ª",
    description: "–°–æ–æ–±—â–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏",
    icon: AlertTriangle,
    color: "bg-purple-500",
  },
]

export function Emergency({ user }: EmergencyProps) {
  const [callingNumber, setCallingNumber] = useState<string | null>(null)
  const [userLocation, setUserLocation] = useState<string>(user.city)
  const { showToast } = useToast()

  // –†–µ–∞–ª—å–Ω—ã–π –∑–≤–æ–Ω–æ–∫
  const handleEmergencyCall = (number: string, title: string) => {
    setCallingNumber(number)

    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –†–µ–∞–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏
    makePhoneCall(number, title)

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    logEmergencyCall(number, title, user.id)

    setTimeout(() => {
      setCallingNumber(null)
      showToast(`–ó–≤–æ–Ω–æ–∫ –Ω–∞ ${title} –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω`, "success")
    }, 2000)
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
  const copyNumber = (number: string, title: string) => {
    navigator.clipboard.writeText(number)
    showToast(`–ù–æ–º–µ—Ä ${title} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${number}`, "success")
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
  const getCurrentLocation = () => {
    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords
          // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –û–±—Ä–∞—Ç–Ω–æ–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
          reverseGeocode(latitude, longitude).then((address) => {
            setUserLocation(address)
            showToast("–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ", "success")
          })
        },
        (error) => {
          showToast("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", "error")
          console.error("Geolocation error:", error)
        },
      )
    } else {
      showToast("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è", "error")
    }
  }

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  const handleQuickAction = (actionId: string) => {
    switch (actionId) {
      case "witness_protection":
        // –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–ø—Ä–æ—Å–∞ –∑–∞—â–∏—Ç—ã
        requestWitnessProtection()
        break
      case "legal_aid":
        // –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏
        requestLegalAid()
        break
      case "anonymous_tip":
        // –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥–∞—á–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
        window.dispatchEvent(new CustomEvent("navigate", { detail: "reports" }))
        break
      default:
        break
    }
  }

  // SOS —Ñ—É–Ω–∫—Ü–∏—è
  const handleSOS = () => {
    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –û—Ç–ø—Ä–∞–≤–∫–∞ SOS —Å–∏–≥–Ω–∞–ª–∞
    sendSOSSignal(user.id, userLocation)
    showToast("SOS —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", "success")

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–≤–æ–Ω–æ–∫ –≤ –ø–æ–ª–∏—Ü–∏—é
    handleEmergencyCall("102", "–ü–æ–ª–∏—Ü–∏—è")
  }

  // –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ù–£–ñ–ù–´:

  // 1. –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏
  const makePhoneCall = (number: string, title: string) => {
    // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if (typeof window !== "undefined" && window.location.protocol === "https:") {
      window.location.href = `tel:${number}`
    }
    // –î–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WebRTC –∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
    console.log(`–ó–≤–æ–Ω–æ–∫ –Ω–∞ ${number} (${title})`)
  }

  // 2. –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –∏ –æ–±—Ä–∞—Ç–Ω–æ–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
  const reverseGeocode = async (lat: number, lng: number): Promise<string> => {
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Maps API, Yandex Maps API –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏
    try {
      // –ü—Ä–∏–º–µ—Ä —Å Google Maps Geocoding API
      // const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${API_KEY}`)
      // const data = await response.json()
      // return data.results[0]?.formatted_address || `${lat}, ${lng}`

      return `${lat.toFixed(4)}, ${lng.toFixed(4)}` // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
    } catch (error) {
      console.error("Reverse geocoding error:", error)
      return `${lat.toFixed(4)}, ${lng.toFixed(4)}`
    }
  }

  // 3. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  const logEmergencyCall = (number: string, service: string, userId: string) => {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏–ª–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const logData = {
      userId,
      service,
      number,
      timestamp: new Date().toISOString(),
      location: userLocation,
    }
    console.log("Emergency call logged:", logData)
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  }

  // 4. SOS —Å–∏–≥–Ω–∞–ª
  const sendSOSSignal = (userId: string, location: string) => {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏ —Å–ª—É–∂–±–∞–º
    const sosData = {
      userId,
      location,
      timestamp: new Date().toISOString(),
      type: "SOS",
    }
    console.log("SOS signal sent:", sosData)
    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º, SMS, email
  }

  // 5. –ó–∞–ø—Ä–æ—Å –∑–∞—â–∏—Ç—ã —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π
  const requestWitnessProtection = () => {
    // –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
    const protectionRequest = {
      userId: user.id,
      timestamp: new Date().toISOString(),
      location: userLocation,
      urgency: "high",
    }
    console.log("Witness protection requested:", protectionRequest)
    showToast("–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞—â–∏—Ç—É —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", "success")
    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ—Ä–≥–∞–Ω—ã
  }

  // 6. –ó–∞–ø—Ä–æ—Å —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏
  const requestLegalAid = () => {
    const legalRequest = {
      userId: user.id,
      timestamp: new Date().toISOString(),
      type: "legal_consultation",
    }
    console.log("Legal aid requested:", legalRequest)
    showToast("–ó–∞–ø—Ä–æ—Å –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", "success")
    // –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–£–ñ–ù–ê: –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –∫ —é—Ä–∏—Å—Ç–∞–º
  }

  return (
    <div className="p-4 space-y-6 bg-gradient-to-br from-red-50 via-white to-orange-50 min-h-screen">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center py-6">
        <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-red-500 to-red-600 rounded-full mb-4 shadow-lg">
          <Phone className="w-8 h-8 text-white" />
        </div>
        <h1 className="text-3xl font-bold text-gray-900 mb-2">–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–≤—è–∑—å</h1>
        <p className="text-gray-600">–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–ª—É–∂–±–∞–º –ø–æ–º–æ—â–∏</p>
      </div>

      {/* SOS –∫–Ω–æ–ø–∫–∞ */}
      <Card className="border-red-500 bg-gradient-to-r from-red-500 to-red-600 text-white shadow-xl">
        <CardContent className="p-6 text-center">
          <Button
            onClick={handleSOS}
            className="w-full h-20 bg-white text-red-600 hover:bg-red-50 text-xl font-bold shadow-lg"
          >
            üÜò –≠–ö–°–¢–†–ï–ù–ù–´–ô –í–´–ó–û–í SOS
          </Button>
          <p className="text-red-100 text-sm mt-3">
            –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ –±–µ–¥—Å—Ç–≤–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–≤–æ–Ω–∫–∞ –≤ —Å–ª—É–∂–±—ã
          </p>
        </CardContent>
      </Card>

      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
      <Card className="border-red-200 bg-gradient-to-r from-red-50 to-orange-50">
        <CardContent className="p-4">
          <div className="flex items-start space-x-3">
            <AlertTriangle className="w-6 h-6 text-red-600 mt-1 flex-shrink-0" />
            <div>
              <h3 className="font-semibold text-red-900 mb-1">–í–∞–∂–Ω–æ!</h3>
              <p className="text-sm text-red-800">
                –ü—Ä–∏ —É–≥—Ä–æ–∑–µ –∂–∏–∑–Ω–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–≤–æ–Ω–∏—Ç–µ 102 (–ø–æ–ª–∏—Ü–∏—è) –∏–ª–∏ 103 (—Å–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å). –í—Å–µ –∑–≤–æ–Ω–∫–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∏
                –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã */}
      <div className="space-y-4">
        <h2 className="text-xl font-bold text-gray-900 mb-4">–ì–æ—Ä—è—á–∏–µ –ª–∏–Ω–∏–∏</h2>

        {emergencyContacts.map((contact) => {
          const IconComponent = contact.icon
          const isCalling = callingNumber === contact.number

          return (
            <Card key={contact.id} className="overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300">
              <div className={`h-2 bg-gradient-to-r ${contact.color}`} />
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center space-x-4">
                    <div className={`p-3 rounded-xl bg-gradient-to-r ${contact.color} shadow-lg`}>
                      <IconComponent className="w-6 h-6 text-white" />
                    </div>
                    <div>
                      <h3 className="font-bold text-gray-900 text-lg">{contact.title}</h3>
                      <p className="text-gray-600 text-sm">{contact.description}</p>
                    </div>
                  </div>
                  <Badge className="bg-green-100 text-green-800">
                    <Clock className="w-3 h-3 mr-1" />
                    {contact.available}
                  </Badge>
                </div>

                <div className="flex items-center justify-between">
                  <div className="text-2xl font-bold text-gray-900">{contact.number}</div>
                  <div className="flex space-x-2">
                    <Button
                      onClick={() => copyNumber(contact.number, contact.title)}
                      variant="outline"
                      size="sm"
                      className="bg-white"
                    >
                      <Copy className="w-4 h-4" />
                    </Button>
                    <Button
                      onClick={() => handleEmergencyCall(contact.number, contact.title)}
                      disabled={isCalling}
                      className={`bg-gradient-to-r ${contact.color} text-white hover:shadow-lg transform hover:scale-105 transition-all duration-200 px-6 py-3`}
                    >
                      {isCalling ? (
                        <>
                          <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2" />
                          –°–æ–µ–¥–∏–Ω—è–µ–º...
                        </>
                      ) : (
                        <>
                          <Phone className="w-4 h-4 mr-2" />
                          –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                        </>
                      )}
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          )
        })}
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="space-y-4">
        <h2 className="text-xl font-bold text-gray-900">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>

        <div className="grid gap-4">
          {quickActions.map((action) => {
            const IconComponent = action.icon

            return (
              <Card
                key={action.id}
                onClick={() => handleQuickAction(action.id)}
                className="hover:shadow-lg transition-all duration-300 cursor-pointer"
              >
                <CardContent className="p-4">
                  <div className="flex items-center space-x-4">
                    <div className={`p-3 rounded-xl ${action.color} shadow-lg`}>
                      <IconComponent className="w-5 h-5 text-white" />
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900">{action.title}</h3>
                      <p className="text-sm text-gray-600">{action.description}</p>
                    </div>
                    <Button variant="outline" size="sm" className="bg-white">
                      –û—Ç–∫—Ä—ã—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            )
          })}
        </div>
      </div>

      {/* –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
      <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
        <CardContent className="p-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <MapPin className="w-6 h-6 text-blue-600" />
              <div>
                <h3 className="font-semibold text-blue-900">–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</h3>
                <p className="text-sm text-blue-700">{userLocation}</p>
                <p className="text-xs text-blue-600 mt-1">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Å–ª—É–∂–±–∞–º –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –≤–∞—Å</p>
              </div>
            </div>
            <Button
              onClick={getCurrentLocation}
              variant="outline"
              size="sm"
              className="bg-white text-blue-600 border-blue-200"
            >
              –û–±–Ω–æ–≤–∏—Ç—å
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
